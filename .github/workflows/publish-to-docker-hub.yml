name: Publish to Docker Hub

on:
  repository_dispatch:

env:
  TZ: Asia/Shanghai
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ["${{ github.event.client_payload.version }}"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Initialization git
        run : |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker images
        run: |
          VERSION=${{matrix.version}}
          VERSION=${VERSION#*v}
          docker build --build-arg CADDY_VERSION=${VERSION} -f ./src/Dockerfile -t ${IMAGE_NAME}:latest -t ${IMAGE_NAME}:${VERSION} ./src
          docker push ${IMAGE_NAME}:${VERSION}
          docker push ${IMAGE_NAME}:latest

      - name: commit lastversion.txt
        id: commit
        run: |
          VERSION=${{matrix.version}}
          echo ${VERSION} > lastversion.txt
          if git status --porcelain | grep lastversion.txt; then
            git add lastversion.txt
            git commit -m "${VERSION}"
            echo "push=true" >> $GITHUB_OUTPUT
          else
            echo "nothing to commit"

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          branch: main

      - name: delete old workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 4
